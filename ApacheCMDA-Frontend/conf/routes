# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /home                                                controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET 		/													 controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET		/login						controllers.Application.login()
GET		/logout						controllers.Application.logout()
GET		/authenticate				controllers.Application.authenticate()
GET		/signup						controllers.Application.signup()
GET		/createNewUser				controllers.Application.createNewUser()
GET		/createSuccess				controllers.Application.createSuccess()
POST	/isEmailExisted				controllers.Application.isEmailExisted()

# BugReporting
GET         /bugs                                                controllers.BugReportController.reports()
GET         /newReport                                           controllers.BugReportController.newReport()
GET         /bug/list                                            controllers.BugReportController.list()
POST        /delete/report                                       controllers.BugReportController.deleteReport()
POST        /solve/report                                        controllers.BugReportController.solveReport()

# About Us
GET         /aboutus                                             controllers.AboutusController.aboutUs()
GET         /aboutProject                                        controllers.AboutusController.aboutProject()

# Workflow system
GET			/workflow											controllers.WorkflowController.home(page: Int?=1)
GET			/workflow/:id										controllers.WorkflowController.workflow(id:Long)
GET			/workflow/new/workflow								controllers.WorkflowController.addWorkflow()
POST		/workflow/new/workflow								controllers.WorkflowController.newWorkflow()	
GET			/workflow/image/:id									controllers.WorkflowController.getImage(id:Long)
GET			/workflow/markAnswer/:m_id/:c_id					controllers.WorkflowController.markAnswer(m_id:Int, c_id:Int)
# Climate Model
GET			/climate											controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET			/climate/tutorial									controllers.ClimateServiceController.tutorial()
GET			/climate/climateServices							controllers.ClimateServiceController.climateServices()
GET			/climate/mostRecentlyAddedClimateServices			controllers.ClimateServiceController.mostRecentlyAddedClimateServices()
GET			/climate/mostRecentlyUsedClimateServices			controllers.ClimateServiceController.mostRecentlyUsedClimateServices()
GET			/climate/mostPopularClimateServices					controllers.ClimateServiceController.mostPopularClimateServices()
POST		/climate/new/climateServices    					controllers.ClimateServiceController.newClimateService()
POST    	/climate/delete/climateServices   					controllers.ClimateServiceController.deleteClimateService()
POST		/climate/download/climateServices					controllers.ClimateServiceController.downloadClimateService()
POST		/climate/edit/climateServices						controllers.ClimateServiceController.editClimateService()
GET			/climate/new/climateServices						controllers.ClimateServiceController.addClimateServices()
GET			/climate/oneService									controllers.ClimateServiceController.oneService(url ?= null)
#Keyword search
GET 		/climate/datasets									controllers.DatasetController.datasetList()
GET			/climate/searchDataSet 					 			controllers.DatasetController.searchDataset()
GET 		/climate/getSearchResult				 			controllers.DatasetController.getSearchResult()

#Map static resources from the /public folder to the /assets URL path
GET     	/assets/*file               						controllers.Assets.at(path="/public", file)


#User Profile
GET         /userProfile/:id                                       controllers.UserProfileController.getUserProfile(id:Long)
GET         /getUser/:id                                           controllers.UserProfileController.getUserInfo(id:Long)
#Subscription
GET             /subscription/getSubscriptionInfo/:id          controllers.SubscriptionController.getSubscriptionInfo(id: Long)
GET             /subscription/subscribeTo/id/:id/targetId/:targetId         controllers.SubscriptionController.subscribeToUser(id: Long, targetId: Long)

#UserGroup
GET             /groups											controllers.UserGroupController.home()
GET             /groups/id/:id                                  controllers.UserGroupController.group(id: Long)
POST            /groups/createGroup/                            controllers.UserGroupController.newGroup()
POST            /groups/addNewAdmin/:groupId                    controllers.UserGroupController.newAdmin(groupId: Long)
POST            /groups/addNewMember/:groupId                   controllers.UserGroupController.newMember(groupId: Long)


POST        /workflow/newComment                                controllers.WorkflowController.newComment()
